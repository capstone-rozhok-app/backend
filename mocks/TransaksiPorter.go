// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	transaksiporter "rozhok/features/transaksi_porter"

	mock "github.com/stretchr/testify/mock"
)

// TransaksiPorterRepo is an autogenerated mock type for the TransaksiPorterData type
type TransaksiPorterRepo struct {
	mock.Mock
}

// CreateTransaksiPenjualan provides a mock function with given fields: TransaksiCore
func (_m *TransaksiPorterRepo) CreateTransaksiPenjualan(TransaksiCore transaksiporter.Core) (int, error) {
	ret := _m.Called(TransaksiCore)

	var r0 int
	if rf, ok := ret.Get(0).(func(transaksiporter.Core) int); ok {
		r0 = rf(TransaksiCore)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(transaksiporter.Core) error); ok {
		r1 = rf(TransaksiCore)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: TransaksiCore
func (_m *TransaksiPorterRepo) Get(TransaksiCore transaksiporter.Core) (transaksiporter.Core, error) {
	ret := _m.Called(TransaksiCore)

	var r0 transaksiporter.Core
	if rf, ok := ret.Get(0).(func(transaksiporter.Core) transaksiporter.Core); ok {
		r0 = rf(TransaksiCore)
	} else {
		r0 = ret.Get(0).(transaksiporter.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(transaksiporter.Core) error); ok {
		r1 = rf(TransaksiCore)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: TransaksiCore
func (_m *TransaksiPorterRepo) GetAll(TransaksiCore transaksiporter.Core) ([]transaksiporter.Core, error) {
	ret := _m.Called(TransaksiCore)

	var r0 []transaksiporter.Core
	if rf, ok := ret.Get(0).(func(transaksiporter.Core) []transaksiporter.Core); ok {
		r0 = rf(TransaksiCore)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]transaksiporter.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(transaksiporter.Core) error); ok {
		r1 = rf(TransaksiCore)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTransaksiPembelian provides a mock function with given fields: TransaksiCore
func (_m *TransaksiPorterRepo) UpdateTransaksiPembelian(TransaksiCore transaksiporter.Core) (int, error) {
	ret := _m.Called(TransaksiCore)

	var r0 int
	if rf, ok := ret.Get(0).(func(transaksiporter.Core) int); ok {
		r0 = rf(TransaksiCore)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(transaksiporter.Core) error); ok {
		r1 = rf(TransaksiCore)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTransaksiPorterRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransaksiPorterRepo creates a new instance of TransaksiPorterRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransaksiPorterRepo(t mockConstructorTestingTNewTransaksiPorterRepo) *TransaksiPorterRepo {
	mock := &TransaksiPorterRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
